if not game:IsLoaded() then game.Loaded:Wait() end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- CONFIG
local BASE_SPEED = 33
local MAX_SPEED = 44.7
local SPEED = BASE_SPEED
local RAMP_DELAY = 0.15 -- ramp-up step delay
local SMOOTHNESS = 0.35 -- higher = smoother (safer)

-- Ramp-up logic
task.spawn(function()
    while SPEED < MAX_SPEED do
        SPEED += 1
        task.wait(RAMP_DELAY)
    end
end)

-- Core safe velocity logic
RunService.Heartbeat:Connect(function()
    if humanoid and hrp and humanoid.MoveDirection.Magnitude > 0.01 then
        local moveDir = humanoid.MoveDirection.Unit
        local vel = hrp.Velocity
        -- Smooth interpolation toward target
        local target = Vector3.new(moveDir.X * SPEED, vel.Y, moveDir.Z * SPEED)
        hrp.Velocity = vel:Lerp(target, SMOOTHNESS)
    end
end)

-- Extra safety refresh (keeps stable, avoids desync)
task.spawn(function()
    while task.wait(0.35) do
        if humanoid and hrp and humanoid.MoveDirection.Magnitude > 0.01 then
            local moveDir = humanoid.MoveDirection.Unit
            local vel = hrp.Velocity
            local target = Vector3.new(moveDir.X * SPEED, vel.Y, moveDir.Z * SPEED)
            -- Apply only if different enough (anti-flag)
            if (vel - target).Magnitude > 2 then
                hrp.Velocity = target
            end
        end
    end
end)
